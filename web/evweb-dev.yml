spring:
  thymeleaf:
    cache: false
    prefix: classpath:/templates/
    suffix: .html

  datasource:
    #mybatis ${} SQL注入报错
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/spring-enterprise?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=round&useSSL=false
    username: root
    password: root
    # 初始化大小，最小，最大
    initialSize: 5
    minIdle: 5
    maxActive: 20
    # 配置获取连接等待超时的时间(毫秒)
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置有一个连接在连接池中的最小生存时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql将无法统计，'wall'用于防火墙
    filters: stat, wall, log4j2
    # 通过connectProperties属性来打开mergeSql功能，慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#  jpa:
#    hibernate:
#      ddl-auto: none
#      naming:
#        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#    show-sql: true
#    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
  #乱码配置
  http:
    encoding:
      force: true
      charset: UTF-8
      enabled: true
  #
  quartz:
      #相关属性配置
      properties:
        org:
          quartz:
            scheduler:
              instanceName: clusteredScheduler
              instanceId: AUTO
            jobStore:
              class: org.quartz.impl.jdbcjobstore.JobStoreTX
              driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
              tablePrefix: QRTZ_
              isClustered: true
              clusterCheckinInterval: 20000
              maxMisfiresToHandleAtATime: 1
              useProperties: false
            threadPool:
              #线程池实现类
              class: org.quartz.simpl.SimpleThreadPool
              #执行最大并发线程数量
              threadCount: 5
              #线程优先级
              threadPriority: 5
              #配置是否启动自动加载数据库内的定时任务，默认true
              threadsInheritContextClassLoaderOfInitializingThread: true
      #数据库方式
      job-store-type: jdbc
      #初始化表结构
      jdbc:
          initialize-schema: never
# redis配置，默认没有密码
  redis:
    host: 127.0.0.1
    port: 6379
    password:
    jedis:
      pool:
        min-idle: 8
        max-idle: 500
        max-active: 2000
        max-wait: 10000
    timeout: 5000 #5000毫秒
    database: 0  #默认0

#
  # session 存储到 redis，实现分布式 session
  session:
    store-type: redis
    redis:
      namespace: ev:session
    # 一分钟超时
    timeout: 1800
  #客户端
#  rabbitmq:
#    password: guest
#    username: guest
#    port: 5672
#    host: localhost
  application:
    name: Easy-Vue


#
#amqconfig:
#  queue:
#    name: messageQueue

security:
    login:
      page: /login.html


server:
  servlet:
    session:
      timeout: 3000
  tomcat:
    uri-encoding: UTF-8
  port: 8080

mybatis:
  mapper-locations: classpath:mapper/*.xml


rmqconfig:
    log-queue:
      name: opr_log


# pagehelper（分页）
pagehelper:
  helper-dialect: mysql
  reasonable: true    #如果在使用分页查看列表式的数据时，希望用户输入的页码即使不在合法范围内（第一页到最后一页之外），也能够看到正确的结果，可以设置reasonable为true，这时如果pageNum<1会查询第一页，pageNum>总页码会查询最后一页
  support-methods-arguments: true
  params: count=countSql
#logging:
#  level:
#    root: debug

test:
  password: '{ciper}e7cee6f78aced4cf1dc7425a682e464d1ad14b77c72544e3179df7f61a54514b%'

